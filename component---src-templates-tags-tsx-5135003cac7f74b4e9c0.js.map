{"version":3,"sources":["webpack:///./src/components/LinkTag.tsx","webpack:///./src/templates/tags.tsx","webpack:///./src/utils/getTagText.ts"],"names":["LinkTag","fieldValue","totalCount","Anchor","to","kebabCase","key","size","ButtonSize","SMALL","getTagText","styled","LinkWithLang","TagsPage","group","data","allMarkdownRemark","title","pathname","SiteTitle","map","tag","pageQuery","Headline2","TAG_TEXT","recruiting","_","startCase"],"mappings":"6FAAA,8FAuBeA,IAVkB,SAAC,GAA+B,IAA7BC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WAC9C,OACE,kBAACC,EAAD,CAAQC,GAAE,SAAWC,IAAUJ,GAArB,IAAqCK,IAAKL,GAClD,kBAAC,IAAD,CAAQM,KAAMC,IAAWC,OAAzB,KACKC,YAAWT,GADhB,IAC8BC,EAAa,GAAb,IAAsBA,EAAtB,OAQpC,IAAMC,EAASQ,YAAOC,KAAV,kEAAGD,CAAH,iG,kLCiBGE,UApBmB,SAAC,GAAD,IAETC,EAFS,EAChCC,KACEC,kBAAqBF,MAFS,OAKhC,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKG,MAAK,QAAWC,SAAQ,UAC7B,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAACC,EAAD,eAEF,kBAAC,IAAD,KACGL,EAAMM,KAAI,SAAAC,GAAG,OACZ,kBAAC,IAAD,eAASf,IAAKe,EAAIpB,YAAgBoB,WASrC,IAAMC,EAAY,aAgBnBH,EAAYR,YAAOY,KAAV,sEAAGZ,CAAH,0B,oCC5Df,yBAEMa,EAAsC,CAC1CC,WAAY,QACZ,cAAe,QAGF,aAACJ,GAAD,OAAiBG,EAASH,IAAQK,IAAEC,UAAUN","file":"component---src-templates-tags-tsx-5135003cac7f74b4e9c0.js","sourcesContent":["import { Button, ButtonSize } from '@class101/ui';\nimport kebabCase from 'lodash/kebabCase';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport getTagText from '../utils/getTagText';\nimport LinkWithLang from './LinkWithLang';\n\ninterface Props {\n  fieldValue: string;\n  totalCount?: number;\n}\n\nconst LinkTag: React.FC<Props> = ({ fieldValue, totalCount }) => {\n  return (\n    <Anchor to={`/tags/${kebabCase(fieldValue)}/`} key={fieldValue}>\n      <Button size={ButtonSize.SMALL}>\n        # {getTagText(fieldValue)} {totalCount > 0 && `(${totalCount})`}\n      </Button>\n    </Anchor>\n  );\n};\n\nexport default LinkTag;\n\nconst Anchor = styled(LinkWithLang)`\n  display: inline-block;\n  text-decoration: none;\n  margin: 16px 8px 16px 0px;\n  &:hover {\n    color: inherit;\n  }\n`;\n","import { Grid, Headline2, Row } from '@class101/ui';\nimport { graphql } from 'gatsby';\nimport React from 'react';\nimport styled from 'styled-components';\n\nimport Layout from '../components/Layout';\nimport LinkTag from '../components/LinkTag';\nimport SEO from '../components/SEO';\nimport { Group, Site } from '../graphql-types';\n\n// Utilities\n// Components\n\ninterface Props {\n  data: {\n    allMarkdownRemark: {\n      group: Group;\n    };\n    site: Site;\n  };\n}\n\nconst TagsPage: React.FC<Props> = ({\n  data: {\n    allMarkdownRemark: { group },\n  },\n}) => (\n  <Layout>\n    <SEO title={`모든 태그`} pathname={`/tags`} />\n    <Grid>\n      <Row>\n        <SiteTitle>모든 태그</SiteTitle>\n      </Row>\n      <Row>\n        {group.map(tag => (\n          <LinkTag key={tag.fieldValue} {...tag} />\n        ))}\n      </Row>\n    </Grid>\n  </Layout>\n);\n\nexport default TagsPage;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\nconst SiteTitle = styled(Headline2)`\n  margin-bottom: 32px;\n`;\n","import _ from 'lodash';\n\nconst TAG_TEXT: { [key: string]: string } = {\n  recruiting: '채용 공고',\n  'open source': '오픈소스',\n};\n\nexport default (tag: string) => TAG_TEXT[tag] || _.startCase(tag);\n"],"sourceRoot":""}